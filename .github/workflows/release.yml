name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x

    - name: Run tests
      run: go test ./...

    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o mcp-feishu-linux-amd64
        GOOS=linux GOARCH=arm64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o mcp-feishu-linux-arm64
        GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o mcp-feishu-windows-amd64.exe
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o mcp-feishu-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.Version=${{ github.ref_name }}" -o mcp-feishu-darwin-arm64

    - name: Create release archives
      run: |
        # Create release directory
        mkdir -p release
        
        # Linux AMD64
        tar -czf release/mcp-feishu-${{ github.ref_name }}-linux-amd64.tar.gz \
          mcp-feishu-linux-amd64 README.md LICENSE CHANGELOG.md examples/
        
        # Linux ARM64
        tar -czf release/mcp-feishu-${{ github.ref_name }}-linux-arm64.tar.gz \
          mcp-feishu-linux-arm64 README.md LICENSE CHANGELOG.md examples/
        
        # Windows AMD64
        zip -r release/mcp-feishu-${{ github.ref_name }}-windows-amd64.zip \
          mcp-feishu-windows-amd64.exe README.md LICENSE CHANGELOG.md examples/
        
        # macOS AMD64
        tar -czf release/mcp-feishu-${{ github.ref_name }}-darwin-amd64.tar.gz \
          mcp-feishu-darwin-amd64 README.md LICENSE CHANGELOG.md examples/
        
        # macOS ARM64
        tar -czf release/mcp-feishu-${{ github.ref_name }}-darwin-arm64.tar.gz \
          mcp-feishu-darwin-arm64 README.md LICENSE CHANGELOG.md examples/

    - name: Generate release notes
      id: release_notes
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          awk '/^## \[/{if(found) exit; if(/\[${{ github.ref_name }}\]/) found=1; next} found' CHANGELOG.md > release_notes.md
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "RELEASE_NOTES=Release ${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: false
        files: |
          release/*
        generate_release_notes: true

  docker-release:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/mcp-feishu
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
